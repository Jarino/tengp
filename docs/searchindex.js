Search.setIndex({docnames:["about","examples","index","modules_api","torch"],envversion:53,filenames:["about.rst","examples.rst","index.rst","modules_api.rst","torch.rst"],objects:{"tengp.FunctionSet":{__getitem__:[3,1,1,""],__init__:[3,1,1,""],__len__:[3,1,1,""],add:[3,1,1,""]},"tengp.Parameters":{__init__:[3,1,1,""]},"tengp.individual":{NPIndividual:[3,0,1,""]},"tengp.individual.NPIndividual":{transform:[3,1,1,""]},tengp:{FunctionSet:[3,0,1,""],Parameters:[3,0,1,""],simple_es:[3,2,1,""]}},objnames:{"0":["py","class","Python class"],"1":["py","method","Python method"],"2":["py","function","Python function"]},objtypes:{"0":"py:class","1":"py:method","2":"py:function"},terms:{"class":3,"float":3,"function":[2,3,4],"import":2,"int":3,"public":3,"return":[2,3],"true":[3,4],For:2,Using:2,__getitem__:3,__init__:3,__len__:3,__name__:3,abound:0,accept:3,accord:3,activ:[2,3],add:[2,3,4],align:4,api:[2,4],argument:3,ariti:3,arrai:[2,3,4],asdfasd:[],assign:3,attribut:3,avail:[1,2,4],base:2,befor:4,best:[2,3],bool:3,bound:3,build:2,california:2,callabl:3,can:[2,3],cartesian:[],cf_individu:3,cgp:[0,2,3],check:4,classif:1,clone:2,column:3,com:2,command:2,comput:4,connect:3,consid:3,construct:3,contain:3,convert:4,cool:0,copi:[2,4],cost:[2,3],cost_funct:3,creat:[3,4],cuda:4,data:[2,3],dataset:2,deep:4,def:2,defin:4,design:4,devic:4,divid:2,document:[2,3],each:3,empti:3,enabl:2,encod:3,error:3,evalu:3,everi:3,evolut:[2,3],evolutionari:3,exampl:2,execut:4,express:3,fals:3,featur:4,fetch_california_h:2,few:0,first:3,fit:[2,3],fitness_of_invalid:3,framework:4,from:[2,4],from_numpi:4,function_set:[2,3],functionset:[2,3,4],funset:2,gene:3,gener:[0,3],genet:[],get_express:2,git:2,github:[1,2],given:3,gpu:[2,4],ground:3,has:3,have:3,here:3,hous:2,html:2,http:2,impos:3,includ:[3,4],index:3,individu:[2,3,4],individualbuild:4,inf:3,info:3,initi:3,input:3,instanc:3,instead:[2,3,4],ipynb:[],its:4,jarino:2,jupyt:1,know:2,last:3,learn:4,librari:[0,4],like:3,limit:3,link:0,list:[1,3],load:2,log:3,main:3,make:2,makefil:2,mani:4,match:3,max_back:3,maximum:3,mdinclud:[],mean_squared_error:2,metric:2,minim:3,modul:3,much:4,mul:4,multipli:2,must:3,mutat:[2,3],mutation_prob:3,n_column:[2,3],n_input:[2,3],n_output:[2,3],n_row:[2,3],ndarrai:3,need:4,node:3,none:3,notebook:1,npindividu:3,number:3,numpi:[3,4],object:3,onli:[2,3],oper:4,optim:3,otherwis:3,out:2,output:[3,4],paper:0,param:[2,3],paramet:[2,3,4],parent:3,penalti:3,phenotyp:2,pip:2,point:[2,3],popul:3,population_s:3,previou:3,print:2,probabilist:[2,3],probabl:3,produc:3,program:[],progress:2,protected_divis:2,provid:[3,4],purpos:2,pypi:2,pytest:2,python:2,random:[3,4],random_st:[2,3],readm:[],reciev:3,regress:[1,2],relev:0,repo:[1,2],res:2,row:3,run:2,same:4,seed:3,seed_individu:3,set:[2,3,4],setup:2,shape:2,should:4,similar:[2,4],simpl:[2,3],simple_:[2,3],sin:2,sinc:4,singl:[2,3],size:3,sklearn:2,sourc:3,specifi:4,stop:3,store:3,strategi:[2,3],string:3,sub:4,subfold:1,subtract:2,symbol:[1,2],system:[2,3],target:[2,3],target_fit:3,tengp:[3,4],tensor:[2,3,4],test:2,thank:2,thi:[0,3],thu:2,todo:0,torch:4,torch_funset:4,torch_individu:4,torch_param:4,transform:[2,3,4],truth:3,two:3,type:3,use:[3,4],use_tensor:[3,4],used:[2,3],useful:4,using:[2,3,4],util:2,valu:3,verbos:[2,3],wai:4,want:4,what:2,when:3,where:[2,3],whether:4,which:[2,3],why:0,word:0,work:[3,4],x_train:[2,4],x_train_tensor:4,y_pred:3,y_train:2,y_true:3},titles:["What is Cartesian Genetic Programming?","Examples","TenGP - Cartesian Genetic Programming with NumPy (or PyTorch)","API","Using PyTorch"],titleterms:{Using:4,api:3,cartesian:[0,2],develop:2,exampl:1,featur:2,genet:[0,2],instal:2,numpi:2,program:[0,2],pytorch:[2,4],quick:2,start:2,tengp:2,what:0}})